import sys

import numpy as np
from sklearn.base import BaseEstimator, TransformerMixin

from ml_project.models.utils import (autocorr, biosspyX, check_X_tuple,
                                     featurevector)


class ExtractFeatures(BaseEstimator, TransformerMixin):
    """docstring"""

    def __init__(self, sampling_rate=300):
        self.sampling_rate = sampling_rate
        self.template0 = None
        self.template1 = None
        self.template2 = None
        self.template3 = None

    def fit(self, X, y=None):
        self.template0 = np.array([
            -4.58400169e+00, -4.01250796e+00, -3.30275873e+00, -2.44509006e+00,
            -1.42743347e+00, -2.42256563e-01, 1.10716866e+00, 2.60464595e+00,
            4.22372634e+00, 5.93300412e+00, 7.70103177e+00, 9.49904615e+00,
            1.13012974e+01, 1.30832376e+01, 1.48173603e+01, 1.64667679e+01,
            1.79786433e+01, 1.92822864e+01, 2.02960265e+01, 2.09423303e+01,
            2.11633647e+01, 2.09262839e+01, 2.02132506e+01, 1.90034407e+01,
            1.72635899e+01, 1.49602366e+01, 1.20899846e+01, 8.70565565e+00,
            4.91289291e+00, 8.30854503e-01, -3.45951425e+00, -7.94011932e+00,
            -1.26295325e+01, -1.75229389e+01, -2.25494104e+01, -2.75927531e+01,
            -3.25737315e+01, -3.75340778e+01, -4.26469896e+01, -4.81288790e+01,
            -5.41125626e+01, -6.05933756e+01, -6.75220669e+01, -7.50036674e+01,
            -8.34512467e+01, -9.35304047e+01, -1.05839958e+02, -1.20432244e+02,
            -1.36360674e+02, -1.51387579e+02, -1.61855018e+02, -1.62668628e+02,
            -1.47476255e+02, -1.09364424e+02, -4.24906442e+01, 5.52433681e+01,
            1.79107380e+02, 3.15471291e+02, 4.42428299e+02, 5.34069408e+02,
            5.67753212e+02, 5.31945355e+02, 4.31310294e+02, 2.86442672e+02,
            1.27806813e+02, -1.39007547e+01, -1.17032017e+02, -1.74155603e+02,
            -1.91376539e+02, -1.82853291e+02, -1.63614233e+02, -1.44081866e+02,
            -1.28278834e+02, -1.15490072e+02, -1.03486606e+02, -9.11067099e+01,
            -7.89655199e+01, -6.85109481e+01, -6.06066144e+01, -5.48141066e+01,
            -4.97775711e+01, -4.42418284e+01, -3.78641847e+01, -3.12685289e+01,
            -2.54199270e+01, -2.08691278e+01, -1.74223415e+01, -1.44016883e+01,
            -1.12145208e+01, -7.77287664e+00, -4.48291220e+00, -1.87657187e+00,
            -2.04778949e-01, 7.08782396e-01, 1.28704476e+00, 1.87143000e+00,
            2.50466377e+00, 2.96359447e+00, 2.97963612e+00, 2.45914307e+00,
            1.54566590e+00, 5.04959032e-01, -4.55973284e-01, -1.29559913e+00,
            -2.10721982e+00, -2.99765136e+00, -3.97941258e+00, -4.95282547e+00,
            -5.77592399e+00, -6.35647157e+00, -6.69533751e+00, -6.85756489e+00,
            -6.90353366e+00, -6.83563331e+00, -6.59519599e+00, -6.10290906e+00,
            -5.30705490e+00, -4.20572381e+00, -2.83414955e+00, -1.23405906e+00,
            5.69836977e-01, 2.57217881e+00, 4.77218816e+00, 7.15655944e+00,
            9.69239643e+00, 1.23322103e+01, 1.50241430e+01, 1.77191387e+01,
            2.03716470e+01, 2.29361929e+01, 2.53642836e+01, 2.76042025e+01,
            2.96031007e+01, 3.13093644e+01, 3.26741439e+01, 3.36526118e+01,
            3.42060915e+01, 3.43052538e+01, 3.39332230e+01, 3.30870682e+01,
            3.17771265e+01, 3.00250295e+01, 2.78619621e+01, 2.53281059e+01,
            2.24729879e+01, 1.93556151e+01, 1.60433828e+01, 1.26095541e+01,
            9.12984499e+00, 5.67880224e+00, 2.32632240e+00, -8.65652995e-01,
            -3.84610092e+00, -6.57694752e+00, -9.03335774e+00, -1.12018139e+01,
            -1.30765146e+01, -1.46555534e+01, -1.59385357e+01, -1.69265622e+01,
            -1.76242149e+01, -1.80421179e+01, -1.81984295e+01, -1.81183015e+01,
            -1.78314475e+01, -1.73688494e+01, -1.67598664e+01, -1.60306141e+01,
            -1.52038102e+01, -1.42997208e+01, -1.33375664e+01, -1.23367411e+01,
            -1.13173251e+01, -1.02995883e+01, -9.30250017e+00, -8.34167308e+00,
            -7.42754122e+00, -6.56467888e+00, -5.75281651e+00, -4.98937745e+00
        ])
        self.template1 = np.array([
            -1.05460342e+00, -5.10460307e-01, 1.16138251e-01, 8.25043857e-01,
            1.61451615e+00, 2.48114614e+00, 3.42212848e+00, 4.43754535e+00,
            5.52950773e+00, 6.69700693e+00, 7.92901964e+00, 9.20083928e+00,
            1.04772284e+01, 1.17210740e+01, 1.29013362e+01, 1.39936196e+01,
            1.49720591e+01, 1.57987726e+01, 1.64204297e+01, 1.67765849e+01,
            1.68142320e+01, 1.64961129e+01, 1.57940813e+01, 1.46721671e+01,
            1.30762483e+01, 1.09460599e+01, 8.24804332e+00, 5.00639124e+00,
            1.30369136e+00, -2.75839929e+00, -7.11509864e+00, -1.17676846e+01,
            -1.67568602e+01, -2.20949613e+01, -2.77118721e+01, -3.34690328e+01,
            -3.92462291e+01, -4.50411058e+01, -5.09966601e+01, -5.73181123e+01,
            -6.41310979e+01, -7.13962435e+01, -7.89684577e+01, -8.67769478e+01,
            -9.49840568e+01, -1.03956818e+02, -1.13989735e+02, -1.24880654e+02,
            -1.35555054e+02, -1.43878334e+02, -1.46643736e+02, -1.39634786e+02,
            -1.17766532e+02, -7.55648272e+01, -8.40481401e+00, 8.52831292e+01,
            2.01285080e+02, 3.27585874e+02, 4.44647167e+02, 5.29008229e+02,
            5.59784696e+02, 5.25940273e+02, 4.31245765e+02, 2.94362808e+02,
            1.43463792e+02, 7.31643622e+00, -9.35098031e+01, -1.51700822e+02,
            -1.72741783e+02, -1.69820205e+02, -1.56993085e+02, -1.43905761e+02,
            -1.34031528e+02, -1.26283613e+02, -1.18192833e+02, -1.08486145e+02,
            -9.78167451e+01, -8.78163894e+01, -7.96231862e+01, -7.30733268e+01,
            -6.70065885e+01, -6.02583900e+01, -5.25049664e+01, -4.43789539e+01,
            -3.68889853e+01, -3.06662246e+01, -2.56003415e+01, -2.10614892e+01,
            -1.64564973e+01, -1.16682378e+01, -7.08073746e+00, -3.23548081e+00,
            -4.22168474e-01, 1.49210932e+00, 2.90925833e+00, 4.18261978e+00,
            5.38907846e+00, 6.34045946e+00, 6.78807657e+00, 6.64234135e+00,
            6.04656318e+00, 5.27453577e+00, 4.55291979e+00, 3.94668605e+00,
            3.37743038e+00, 2.73717738e+00, 1.99835525e+00, 1.24106132e+00,
            5.92597325e-01, 1.38769204e-01, -1.23470706e-01, -2.64474886e-01,
            -3.58281831e-01, -4.29039897e-01, -4.42918077e-01, -3.42199740e-01,
            -8.93978343e-02, 3.11148805e-01, 8.24220434e-01, 1.41260815e+00,
            2.06045569e+00, 2.77698710e+00, 3.58325563e+00, 4.49493933e+00,
            5.51268454e+00, 6.62256379e+00, 7.80158308e+00, 9.02212167e+00,
            1.02534012e+01, 1.14623892e+01, 1.26170440e+01, 1.36918219e+01,
            1.46722570e+01, 1.55551879e+01, 1.63439378e+01, 1.70410301e+01,
            1.76422461e+01, 1.81343934e+01, 1.84965896e+01, 1.87032860e+01,
            1.87275320e+01, 1.85442882e+01, 1.81343706e+01, 1.74890334e+01,
            1.66138355e+01, 1.55296556e+01, 1.42694701e+01, 1.28715269e+01,
            1.13715331e+01, 9.79711944e+00, 8.16669756e+00, 6.49262152e+00,
            4.78660140e+00, 3.06459853e+00, 1.34913935e+00, -3.31430235e-01,
            -1.94585242e+00, -3.46347661e+00, -4.85704277e+00, -6.10414546e+00,
            -7.18762158e+00, -8.09561428e+00, -8.82208750e+00, -9.36807134e+00,
            -9.74314592e+00, -9.96600902e+00, -1.00628680e+01, -1.00631202e+01,
            -9.99317223e+00, -9.87063580e+00, -9.70161843e+00, -9.48285075e+00,
            -9.20816211e+00, -8.87642037e+00, -8.49687691e+00, -8.08878713e+00,
            -7.67493903e+00, -7.27192535e+00, -6.88187295e+00, -6.48979691e+00
        ])
        self.template2 = np.array([
            -1.95420229e+00, -1.41461925e+00, -1.23964020e+00, -1.31757566e+00,
            -1.47206768e+00, -1.50712434e+00, -1.23377731e+00, -4.95100956e-01,
            7.95266182e-01, 2.60785337e+00, 4.77373514e+00, 7.01146326e+00,
            9.00888938e+00, 1.05307138e+01, 1.15037882e+01, 1.20411178e+01,
            1.23955986e+01, 1.28660293e+01, 1.36934348e+01, 1.49815197e+01,
            1.66601816e+01, 1.84965972e+01, 2.01483114e+01, 2.12438383e+01,
            2.14664896e+01, 2.06120039e+01, 1.85993119e+01, 1.54381577e+01,
            1.11839738e+01, 5.91782741e+00, -2.34004928e-01, -7.06671788e+00,
            -1.43000356e+01, -2.16482526e+01, -2.89303085e+01, -3.61405370e+01,
            -4.34047804e+01, -5.08218128e+01, -5.82910803e+01, -6.54728790e+01,
            -7.19600261e+01, -7.75859078e+01, -8.26585126e+01, -8.79113809e+01,
            -9.41333653e+01, -1.01679281e+02, -1.10189680e+02, -1.18725956e+02,
            -1.26196299e+02, -1.31635594e+02, -1.33888028e+02, -1.30644056e+02,
            -1.17419693e+02, -8.75038859e+01, -3.37173673e+01, 4.80702274e+01,
            1.54939654e+02, 2.74535218e+02, 3.86169604e+02, 4.65913832e+02,
            4.94193815e+02, 4.62887102e+02, 3.78749363e+02, 2.61442670e+02,
            1.36844710e+02, 2.84721432e+01, -4.93715846e+01, -9.41038591e+01,
            -1.12596719e+02, -1.15908566e+02, -1.13869764e+02, -1.11908952e+02,
            -1.10930630e+02, -1.09367681e+02, -1.05657172e+02, -9.96516477e+01,
            -9.25059669e+01, -8.56182500e+01, -7.96329408e+01, -7.42040115e+01,
            -6.85239171e+01, -6.20818090e+01, -5.50554879e+01, -4.81132164e+01,
            -4.18668292e+01, -3.64324106e+01, -3.14071574e+01, -2.62234046e+01,
            -2.05736094e+01, -1.45944953e+01, -8.72039415e+00, -3.37041154e+00,
            1.27056275e+00, 5.22989686e+00, 8.54692277e+00, 1.10932767e+01,
            1.25799697e+01, 1.27562862e+01, 1.16494466e+01, 9.65983358e+00,
            7.43144285e+00, 5.57552666e+00, 4.42093398e+00, 3.93640633e+00,
            3.84905483e+00, 3.86016319e+00, 3.81514750e+00, 3.73661631e+00,
            3.72993135e+00, 3.84787500e+00, 4.01074144e+00, 4.02711833e+00,
            3.69213654e+00, 2.89871610e+00, 1.70099937e+00, 3.04338579e-01,
            -1.00485615e+00, -1.95420125e+00, -2.36906972e+00, -2.21968914e+00,
            -1.61966370e+00, -7.76275989e-01, 9.40027725e-02, 8.57235215e-01,
            1.52392579e+00, 2.24842014e+00, 3.25610369e+00, 4.72376683e+00,
            6.66803886e+00, 8.90141573e+00, 1.10868877e+01, 1.28715426e+01,
            1.40339175e+01, 1.45675983e+01, 1.46558971e+01, 1.45537049e+01,
            1.44469207e+01, 1.43723624e+01, 1.42414249e+01, 1.39425206e+01,
            1.34450520e+01, 1.28278266e+01, 1.22097348e+01, 1.16339260e+01,
            1.09967590e+01, 1.00879004e+01, 8.73119295e+00, 6.93886113e+00,
            4.96987657e+00, 3.23688874e+00, 2.10292341e+00, 1.68478974e+00,
            1.78222474e+00, 1.97658173e+00, 1.83936737e+00, 1.12755286e+00,
            -1.40287341e-01, -1.75026493e+00, -3.43574266e+00, -4.99431148e+00,
            -6.31481579e+00, -7.32752636e+00, -7.94822469e+00, -8.08308870e+00,
            -7.70210477e+00, -6.92222864e+00, -6.02054937e+00, -5.34040383e+00,
            -5.12990739e+00, -5.40719844e+00, -5.93921382e+00, -6.35444835e+00,
            -6.32918299e+00, -5.74439850e+00, -4.73234870e+00, -3.59960623e+00,
            -2.68120607e+00, -2.20729925e+00, -2.23998994e+00, -2.68777610e+00
        ])
        self.template3 = np.array([
            1.23034320e+00, 1.35433389e+00, 1.47493381e+00, 1.59442575e+00,
            1.71970077e+00, 1.85626021e+00, 2.00377096e+00, 2.15656445e+00,
            2.30875352e+00, 2.45997430e+00, 2.61729396e+00, 2.79200960e+00,
            2.99412343e+00, 3.22866768e+00, 3.49571955e+00, 3.79235916e+00,
            4.11358007e+00, 4.45134995e+00, 4.79391455e+00, 5.12719864e+00,
            5.43619626e+00, 5.70080640e+00, 5.88311284e+00, 5.91212797e+00,
            5.68044209e+00, 5.06522746e+00, 3.97058853e+00, 2.36873931e+00,
            3.10725883e-01, -2.10637467e+00, -4.79768547e+00, -7.73376336e+00,
            -1.09364329e+01, -1.44321499e+01, -1.82066035e+01, -2.22094638e+01,
            -2.64182023e+01, -3.09124243e+01, -3.58851573e+01, -4.15563315e+01,
            -4.80358369e+01, -5.52440229e+01, -6.29755765e+01, -7.10873823e+01,
            -7.96742212e+01, -8.90641883e+01, -9.95595771e+01, -1.11010149e+02,
            -1.22412373e+02, -1.31694724e+02, -1.35709692e+02, -1.30349790e+02,
            -1.10768378e+02, -7.18970543e+01, -9.60413244e+00, 7.73248779e+01,
            1.84763651e+02, 3.01459527e+02, 4.09305030e+02, 4.86614406e+02,
            5.14060024e+02, 4.81369582e+02, 3.91967693e+02, 2.63168284e+02,
            1.21297153e+02, -6.55447794e+00, -1.00795506e+02, -1.54229430e+02,
            -1.71828062e+02, -1.66085142e+02, -1.50593989e+02, -1.34938285e+02,
            -1.22829469e+02, -1.13465635e+02, -1.04490619e+02, -9.45155257e+01,
            -8.39546391e+01, -7.42429560e+01, -6.64648405e+01, -6.05232953e+01,
            -5.53354354e+01, -4.97195477e+01, -4.32181517e+01, -3.62847743e+01,
            -2.98109831e+01, -2.44385488e+01, -2.01761289e+01, -1.65349654e+01,
            -1.29926482e+01, -9.39266096e+00, -6.00061399e+00, -3.23364029e+00,
            -1.31506183e+00, -1.21006996e-01, 6.96708439e-01, 1.44288407e+00,
            2.18422981e+00, 2.75908497e+00, 2.95359535e+00, 2.69082165e+00,
            2.09388515e+00, 1.39801047e+00, 8.00047479e-01, 3.64181640e-01,
            4.04633903e-02, -2.40463377e-01, -4.83051174e-01, -6.16066211e-01,
            -5.51053824e-01, -2.52476737e-01, 2.38899280e-01, 8.43381739e-01,
            1.50526237e+00, 2.23021143e+00, 3.07119495e+00, 4.07854999e+00,
            5.25458361e+00, 6.54485280e+00, 7.86777790e+00, 9.15694013e+00,
            1.03856003e+01, 1.15605363e+01, 1.26958960e+01, 1.37894289e+01,
            1.48169720e+01, 1.57444663e+01, 1.65440635e+01, 1.72006866e+01,
            1.77056311e+01, 1.80449514e+01, 1.81938519e+01, 1.81225320e+01,
            1.78094762e+01, 1.72525530e+01, 1.64702469e+01, 1.54927296e+01,
            1.43495330e+01, 1.30624559e+01, 1.16481939e+01, 1.01282559e+01,
            8.53865640e+00, 6.93170334e+00, 5.36677550e+00, 3.89348183e+00,
            2.53537177e+00, 1.28289643e+00, 1.00304725e-01, -1.05549177e+00,
            -2.21213461e+00, -3.36562368e+00, -4.47860329e+00, -5.49432290e+00,
            -6.35987896e+00, -7.04780940e+00, -7.56615141e+00, -7.95317016e+00,
            -8.26086022e+00, -8.53642017e+00, -8.81037841e+00, -9.09458766e+00,
            -9.38669741e+00, -9.67444340e+00, -9.93526958e+00, -1.01325778e+01,
            -1.02147750e+01, -1.01232024e+01, -9.80943888e+00, -9.25500310e+00,
            -8.48258918e+00, -7.55108140e+00, -6.53544350e+00, -5.50169480e+00,
            -4.49043686e+00, -3.51720512e+00, -2.58728331e+00, -1.71336649e+00,
            -9.22803110e-01, -2.48444207e-01, 2.91233982e-01, 7.08800421e-01
        ])
        return self

    def transform(self, X, y=None):
        X1, X2 = check_X_tuple(X)
        processed = biosspyX(
            X1, sampling_rate=self.sampling_rate, show=False, verbose=True)

        _, temp = featurevector(processed[0], sampling_rate=self.sampling_rate)
        new_length = len(temp)
        all_features = np.empty((X1.shape[0], new_length))
        for i in range(X1.shape[0]):
            filtered_signal, features = featurevector(
                processed[i],
                self.template0,
                self.template1,
                self.template2,
                self.template3,
                sampling_rate=self.sampling_rate)

            assert all_features.shape[1] == len(features)
            all_features[i, :] = features
            X1[i, :] = filtered_signal

            if i % 300 == 0:
                print("Extracting features from sample", i)
                sys.stdout.flush()

        X2 = X2.reshape(X1.shape[0], -1)
        X2 = np.hstack((X2, all_features))
        return (X1, X2)


class Autocorrelogram(BaseEstimator, TransformerMixin):
    """docstring"""

    def __init__(self, first_fraction=1.0):
        self.first_fraction = first_fraction

    def fit(self, X, y=None):
        return self

    def transform(self, X, y=None):
        print("Computing autocorrelogram...")
        sys.stdout.flush()
        X1, X2 = check_X_tuple(X)
        upto = round(X1.shape[1] * self.first_fraction)
        _, _, corr = autocorr(X1[0, :upto])
        newfeatures = np.empty((X1.shape[0], len(corr)), dtype=float)
        for i in range(X1.shape[0]):
            _, _, corr = autocorr(X1[i, :upto])
            newfeatures[i, :] = corr
        print(newfeatures.shape)
        X2 = X2.reshape(X1.shape[0], -1)
        X2 = np.hstack((X2, newfeatures))
        X2 = X2.reshape(X1.shape[0], -1)
        return (X1, X2)
